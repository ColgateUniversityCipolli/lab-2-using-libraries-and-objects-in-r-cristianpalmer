################ Task 1 Step 2
slash_counts <- str_count(music_dirs, "/")
album_dirs <- music_dirs [which(slash_counts == 2)]
for (i in length(album_dirs)) {
################ Task 1 Step 3 Part 1
# For each album one at a time
curr.album <- album_dirs[i]
files_in_album <- list.files(curr.album)
################ Task 1 Step 3 Part 2
WAV_counts <- str_count(files_in_album, ".wav")
files_in_album <- files_in_album [which(WAV_counts == 1)]
for (j in length(files_in_album)) {
################ Task 1 Step 3 Part 3 Part A
code_to_process = vector(mode = "character", length = 0)
track = files_in_album[j]
Track_Title <- paste('"',curr.album, "/",track,'"', sep = "")
Track_Title
################ Task 1 Step 3 Part 3 Part B
track.file.name <- str_sub(track, 1, nchar(track) - 4)
split_name <- str_split(track.file.name, "-")[[1]]
track_name <- split_name[length(split_name)]
################ Task 1 Step 3 Part 3 Part C
split_artistname <- str_split(curr.album, "/")[[1]]
artist_name <- split_artistname[2]
split_albumname <- str_split(curr.album, "/")[[1]]
album_name <- split_albumname[length(split_albumname)]
Desired.Output.File <- paste(artist_name, "-",album_name,'-',track_name,'.',"json", sep = "")
Desired.Output.File
################ Task 1 Step 3 Part 3 Part C
Final.output <- paste("streaming_extractor_music.exe", "" , track, "", Desired.Output.File)
}
}
Final.output
Final.output <- paste('streaming_extractor_music.exe "', track, '" "', Desired.Output.File, '"', sep = "")
Final.output
Final.output <- paste('streaming_extractor_music.exe "', track, '" "', Desired.Output.File, '"', sep = "\")
Final.output
library("stringr")
Final.output
library("stringr")
################ Task 1 Step 1
music_dirs <- list.dirs("MUSIC", recursive = TRUE)
################ Task 1 Step 2
slash_counts <- str_count(music_dirs, "/")
album_dirs <- music_dirs [which(slash_counts == 2)]
for (i in length(album_dirs)) {
################ Task 1 Step 3 Part 1
# For each album one at a time
curr.album <- album_dirs[i]
files_in_album <- list.files(curr.album)
################ Task 1 Step 3 Part 2
WAV_counts <- str_count(files_in_album, ".wav")
files_in_album <- files_in_album [which(WAV_counts == 1)]
for (j in length(files_in_album)) {
################ Task 1 Step 3 Part 3 Part A
code_to_process = vector(mode = "character", length = 0)
track = files_in_album[j]
Track_Title <- paste('"',curr.album, "/",track,'"', sep = "")
Track_Title
################ Task 1 Step 3 Part 3 Part B
track.file.name <- str_sub(track, 1, nchar(track) - 4)
split_name <- str_split(track.file.name, "-")[[1]]
track_name <- split_name[length(split_name)]
################ Task 1 Step 3 Part 3 Part C
split_artistname <- str_split(curr.album, "/")[[1]]
artist_name <- split_artistname[2]
split_albumname <- str_split(curr.album, "/")[[1]]
album_name <- split_albumname[length(split_albumname)]
Desired.Output.File <- paste(artist_name, "-",album_name,'-',track_name,'.',"json", sep = "")
Desired.Output.File
################ Task 1 Step 3 Part 3 Part C
Final.output <- paste('streaming_extractor_music.exe "', track, '" "', Desired.Output.File, '"', sep = "")
}
}
help(paste)
Final.output
Final.output <- paste("streaming_extractor_music.exe", track, Desired.Output.File)
Final.output
Final.output <- paste("streaming_extractor_music.exe","", track,"", Desired.Output.File)
Final.output
Final.output <- paste("streaming_extractor_music.exe","","'", track,"","'", Desired.Output.File)
Final.output
Final.output <- paste("streaming_extractor_music.exe","",'"', track,"",'"', Desired.Output.File)
Final.output
Final.output <- paste('streaming_extractor_music.exe "', track, Desired.Output.File, '"', sep = "")
Final.output
library("stringr")
################ Task 1 Step 1
music_dirs <- list.dirs("MUSIC", recursive = TRUE)
################ Task 1 Step 2
code_to_process <- c()
slash_counts <- str_count(music_dirs, "/")
album_dirs <- music_dirs [which(slash_counts == 2)]
for (i in length(album_dirs)) {
################ Task 1 Step 3 Part 1
# For each album one at a time
curr.album <- album_dirs[i]
files_in_album <- list.files(curr.album)
################ Task 1 Step 3 Part 2
WAV_counts <- str_count(files_in_album, ".wav")
files_in_album <- files_in_album [which(WAV_counts == 1)]
for (j in length(files_in_album)) {
################ Task 1 Step 3 Part 3 Part A
track = files_in_album[j]
Track_Title <- paste('"',curr.album, "/",track,'"', sep = "")
Track_Title
################ Task 1 Step 3 Part 3 Part B
track.file.name <- str_sub(track, 1, nchar(track) - 4)
split_name <- str_split(track.file.name, "-")[[1]]
track_name <- split_name[length(split_name)]
################ Task 1 Step 3 Part 3 Part C
split_artistname <- str_split(curr.album, "/")[[1]]
artist_name <- split_artistname[2]
split_albumname <- str_split(curr.album, "/")[[1]]
album_name <- split_albumname[length(split_albumname)]
Desired.Output.File <- paste(artist_name, "-",album_name,'-',track_name,'.',"json", sep = "")
Desired.Output.File
################ Task 1 Step 3 Part 3 Part C
Final.output <- paste('streaming_extractor_music.exe "', track, Desired.Output.File, '"', sep = "")
code_to_process <- c(code_to_process, Final.output)
}
}
code_to_process
library("stringr")
################ Task 1 Step 1
music_dirs <- list.dirs("MUSIC", recursive = TRUE)
################ Task 1 Step 2
code_to_process <- c()
slash_counts <- str_count(music_dirs, "/")
album_dirs <- music_dirs [which(slash_counts == 2)]
for (i in length(album_dirs)) {
################ Task 1 Step 3 Part 1
# For each album one at a time
curr.album <- album_dirs[i]
files_in_album <- list.files(curr.album)
################ Task 1 Step 3 Part 2
WAV_counts <- str_count(files_in_album, ".wav")
files_in_album <- files_in_album [which(WAV_counts == 1)]
for (j in length(files_in_album)) {
################ Task 1 Step 3 Part 3 Part A
track = files_in_album[j]
Track_Title <- paste('"',curr.album, "/",track,'"', sep = "")
Track_Title
################ Task 1 Step 3 Part 3 Part B
track.file.name <- str_sub(track, 1, nchar(track) - 4)
split_name <- str_split(track.file.name, "-")[[1]]
track_name <- split_name[length(split_name)]
################ Task 1 Step 3 Part 3 Part C
split_artistname <- str_split(curr.album, "/")[[1]]
artist_name <- split_artistname[2]
split_albumname <- str_split(curr.album, "/")[[1]]
album_name <- split_albumname[length(split_albumname)]
Desired.Output.File <- paste(artist_name, "-",album_name,'-',track_name,'.',"json", sep = "")
Desired.Output.File
################ Task 1 Step 3 Part 3 Part C
Final.output <- paste('streaming_extractor_music.exe "', track, Desired.Output.File, '"', sep = "")
code_to_process <- c(code_to_process, Final.output)
}
}
################ Step 4
writeLines(code_to_process, "batfile.txt")
Final.output
Desired.Output.File
track
files_in_album
track
Track_Title
track_name
Final.output <- paste('streaming_extractor_music.exe "', track_name, Desired.Output.File, '"', sep = "")
code_to_process
library("stringr")
################ Task 1 Step 1
music_dirs <- list.dirs("MUSIC", recursive = TRUE)
################ Task 1 Step 2
code_to_process <- c()
slash_counts <- str_count(music_dirs, "/")
album_dirs <- music_dirs [which(slash_counts == 2)]
for (i in length(album_dirs)) {
################ Task 1 Step 3 Part 1
# For each album one at a time
curr.album <- album_dirs[i]
files_in_album <- list.files(curr.album)
################ Task 1 Step 3 Part 2
WAV_counts <- str_count(files_in_album, ".wav")
files_in_album <- files_in_album [which(WAV_counts == 1)]
for (j in length(files_in_album)) {
################ Task 1 Step 3 Part 3 Part A
track = files_in_album[j]
Track_Title <- paste('"',curr.album, "/",track,'"', sep = "")
Track_Title
################ Task 1 Step 3 Part 3 Part B
track.file.name <- str_sub(track, 1, nchar(track) - 4)
split_name <- str_split(track.file.name, "-")[[1]]
track_name <- split_name[length(split_name)]
################ Task 1 Step 3 Part 3 Part C
split_artistname <- str_split(curr.album, "/")[[1]]
artist_name <- split_artistname[2]
split_albumname <- str_split(curr.album, "/")[[1]]
album_name <- split_albumname[length(split_albumname)]
Desired.Output.File <- paste(artist_name, "-",album_name,'-',track_name,'.',"json", sep = "")
Desired.Output.File
################ Task 1 Step 3 Part 3 Part C
Final.output <- paste('streaming_extractor_music.exe "', track_name, Desired.Output.File, '"', sep = "")
code_to_process <- c(code_to_process, Final.output)
}
}
################ Step 4
writeLines(code_to_process, "batfile.txt")
Final.output
album_name
Final.output
track
track_name
Desired.Output.File
curr.album
Track_Title
Final.output <- paste('streaming_extractor_music.exe "', Track_Title, Desired.Output.File, '"', sep = "")
library("stringr")
################ Task 1 Step 1
music_dirs <- list.dirs("MUSIC", recursive = TRUE)
################ Task 1 Step 2
code_to_process <- c()
slash_counts <- str_count(music_dirs, "/")
album_dirs <- music_dirs [which(slash_counts == 2)]
for (i in length(album_dirs)) {
################ Task 1 Step 3 Part 1
# For each album one at a time
curr.album <- album_dirs[i]
files_in_album <- list.files(curr.album)
################ Task 1 Step 3 Part 2
WAV_counts <- str_count(files_in_album, ".wav")
files_in_album <- files_in_album [which(WAV_counts == 1)]
for (j in length(files_in_album)) {
################ Task 1 Step 3 Part 3 Part A
track = files_in_album[j]
Track_Title <- paste('"',curr.album, "/",track,'"', sep = "")
Track_Title
################ Task 1 Step 3 Part 3 Part B
track.file.name <- str_sub(track, 1, nchar(track) - 4)
split_name <- str_split(track.file.name, "-")[[1]]
track_name <- split_name[length(split_name)]
################ Task 1 Step 3 Part 3 Part C
split_artistname <- str_split(curr.album, "/")[[1]]
artist_name <- split_artistname[2]
split_albumname <- str_split(curr.album, "/")[[1]]
album_name <- split_albumname[length(split_albumname)]
Desired.Output.File <- paste(artist_name, "-",album_name,'-',track_name,'.',"json", sep = "")
Desired.Output.File
################ Task 1 Step 3 Part 3 Part C
Final.output <- paste('streaming_extractor_music.exe "', Track_Title, Desired.Output.File, '"', sep = "")
code_to_process <- c(code_to_process, Final.output)
}
}
################ Step 4
writeLines(code_to_process, "batfile.txt")
Track_Title
track_name
Track_Title
split_name
track.file.name
Final.output <- paste('streaming_extractor_music.exe "', track.file.name, Desired.Output.File, '"', sep = "")
library("stringr")
################ Task 1 Step 1
music_dirs <- list.dirs("MUSIC", recursive = TRUE)
################ Task 1 Step 2
code_to_process <- c()
slash_counts <- str_count(music_dirs, "/")
album_dirs <- music_dirs [which(slash_counts == 2)]
for (i in length(album_dirs)) {
################ Task 1 Step 3 Part 1
# For each album one at a time
curr.album <- album_dirs[i]
files_in_album <- list.files(curr.album)
################ Task 1 Step 3 Part 2
WAV_counts <- str_count(files_in_album, ".wav")
files_in_album <- files_in_album [which(WAV_counts == 1)]
for (j in length(files_in_album)) {
################ Task 1 Step 3 Part 3 Part A
track = files_in_album[j]
Track_Title <- paste('"',curr.album, "/",track,'"', sep = "")
Track_Title
################ Task 1 Step 3 Part 3 Part B
track.file.name <- str_sub(track, 1, nchar(track) - 4)
split_name <- str_split(track.file.name, "-")[[1]]
track_name <- split_name[length(split_name)]
################ Task 1 Step 3 Part 3 Part C
split_artistname <- str_split(curr.album, "/")[[1]]
artist_name <- split_artistname[2]
split_albumname <- str_split(curr.album, "/")[[1]]
album_name <- split_albumname[length(split_albumname)]
Desired.Output.File <- paste(artist_name, "-",album_name,'-',track_name,'.',"json", sep = "")
Desired.Output.File
################ Task 1 Step 3 Part 3 Part C
Final.output <- paste('streaming_extractor_music.exe "', track.file.name, Desired.Output.File, '"', sep = "")
code_to_process <- c(code_to_process, Final.output)
}
}
################ Step 4
writeLines(code_to_process, "batfile.txt")
track
Final.output <- paste('streaming_extractor_music.exe "', track, Desired.Output.File, '"', sep = "")
library("stringr")
################ Task 1 Step 1
music_dirs <- list.dirs("MUSIC", recursive = TRUE)
################ Task 1 Step 2
code_to_process <- c()
slash_counts <- str_count(music_dirs, "/")
album_dirs <- music_dirs [which(slash_counts == 2)]
for (i in length(album_dirs)) {
################ Task 1 Step 3 Part 1
# For each album one at a time
curr.album <- album_dirs[i]
files_in_album <- list.files(curr.album)
################ Task 1 Step 3 Part 2
WAV_counts <- str_count(files_in_album, ".wav")
files_in_album <- files_in_album [which(WAV_counts == 1)]
for (j in length(files_in_album)) {
################ Task 1 Step 3 Part 3 Part A
track = files_in_album[j]
Track_Title <- paste('"',curr.album, "/",track,'"', sep = "")
Track_Title
################ Task 1 Step 3 Part 3 Part B
track.file.name <- str_sub(track, 1, nchar(track) - 4)
split_name <- str_split(track.file.name, "-")[[1]]
track_name <- split_name[length(split_name)]
################ Task 1 Step 3 Part 3 Part C
split_artistname <- str_split(curr.album, "/")[[1]]
artist_name <- split_artistname[2]
split_albumname <- str_split(curr.album, "/")[[1]]
album_name <- split_albumname[length(split_albumname)]
Desired.Output.File <- paste(artist_name, "-",album_name,'-',track_name,'.',"json", sep = "")
Desired.Output.File
################ Task 1 Step 3 Part 3 Part C
Final.output <- paste('streaming_extractor_music.exe "', track, Desired.Output.File, '"', sep = "")
code_to_process <- c(code_to_process, Final.output)
}
}
################ Step 4
writeLines(code_to_process, "batfile.txt")
Final.output <- paste('streaming_extractor_music.exe "', track, '" "', Desired.Output.File, '"', sep = "")
library("stringr")
################ Task 1 Step 1
music_dirs <- list.dirs("MUSIC", recursive = TRUE)
################ Task 1 Step 2
code_to_process <- c()
slash_counts <- str_count(music_dirs, "/")
album_dirs <- music_dirs [which(slash_counts == 2)]
for (i in length(album_dirs)) {
################ Task 1 Step 3 Part 1
# For each album one at a time
curr.album <- album_dirs[i]
files_in_album <- list.files(curr.album)
################ Task 1 Step 3 Part 2
WAV_counts <- str_count(files_in_album, ".wav")
files_in_album <- files_in_album [which(WAV_counts == 1)]
for (j in length(files_in_album)) {
################ Task 1 Step 3 Part 3 Part A
track = files_in_album[j]
Track_Title <- paste('"',curr.album, "/",track,'"', sep = "")
Track_Title
################ Task 1 Step 3 Part 3 Part B
track.file.name <- str_sub(track, 1, nchar(track) - 4)
split_name <- str_split(track.file.name, "-")[[1]]
track_name <- split_name[length(split_name)]
################ Task 1 Step 3 Part 3 Part C
split_artistname <- str_split(curr.album, "/")[[1]]
artist_name <- split_artistname[2]
split_albumname <- str_split(curr.album, "/")[[1]]
album_name <- split_albumname[length(split_albumname)]
Desired.Output.File <- paste(artist_name, "-",album_name,'-',track_name,'.',"json", sep = "")
Desired.Output.File
################ Task 1 Step 3 Part 3 Part C
Final.output <- paste('streaming_extractor_music.exe "', track, '" "', Desired.Output.File, '"', sep = "")
code_to_process <- c(code_to_process, Final.output)
}
}
################ Step 4
writeLines(code_to_process, "batfile.txt")
library("stringr")
################ Task 1 Step 1
music_dirs <- list.dirs("MUSIC", recursive = TRUE)
################ Task 1 Step 2
code_to_process <- c()
slash_counts <- str_count(music_dirs, "/")
album_dirs <- music_dirs [which(slash_counts == 2)]
for (i in 1:length(album_dirs)) {
################ Task 1 Step 3 Part 1
# For each album one at a time
curr.album <- album_dirs[i]
files_in_album <- list.files(curr.album)
################ Task 1 Step 3 Part 2
WAV_counts <- str_count(files_in_album, ".wav")
files_in_album <- files_in_album [which(WAV_counts == 1)]
for (j in 1:length(files_in_album)) {
################ Task 1 Step 3 Part 3 Part A
track = files_in_album[j]
Track_Title <- paste('"',curr.album, "/",track,'"', sep = "")
Track_Title
################ Task 1 Step 3 Part 3 Part B
track.file.name <- str_sub(track, 1, nchar(track) - 4)
split_name <- str_split(track.file.name, "-")[[1]]
track_name <- split_name[length(split_name)]
################ Task 1 Step 3 Part 3 Part C
split_artistname <- str_split(curr.album, "/")[[1]]
artist_name <- split_artistname[2]
split_albumname <- str_split(curr.album, "/")[[1]]
album_name <- split_albumname[length(split_albumname)]
Desired.Output.File <- paste(artist_name, "-",album_name,'-',track_name,'.',"json", sep = "")
Desired.Output.File
################ Task 1 Step 3 Part 3 Part C
Final.output <- paste('streaming_extractor_music.exe "', track, '" "', Desired.Output.File, '"', sep = "")
code_to_process <- c(code_to_process, Final.output)
}
}
################ Step 4
writeLines(code_to_process, "batfile.txt")
install.packages"jsonlite"
(install.packages"jsonlite")
################ Task 2
(install.packages"jsonlite")
install.packages("jsonlite")
split_name
track
help("jsonlite")
??jsonlite
library(jsonlite)
all.equal(mtcars, fromJSON(toJSON(mtcars)))
library(jsonlite)
Json_file = "The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
split_Json_file = str_split(Json_file, "-", simplify = TRUE)
split_Json_file
split_Json_file = str_split(Json_file, "-")
split_Json_file
split_Json_file = str_split(Json_file, "-", simplify = TRUE)
split_Json_file
fromJSON(Json_file)
fromJSON(Json_file)
JSON_Data
JSON_Data = fromJSON(Json_file)
JSON_Data
average_loudness = JSON_Data$lowlevel$average_loudness
average_loudness
spectral_energy = JSON_Data$lowlevel$spectral_energy$mean
spectral_energy
danceability = JSON_Data$rhythym$danceability
danceability
danceability = JSON_Data$rhythym$danceability
danceability
danceability = JSON_Data$rhythm$danceability
danceability
bpm =JSON_Data$rhythm$bpm
bpm
key_key = JSON_Data$tonal$key_key
key_key
key_scale = JSON_Data$tonal$key_scale
key_scale
length = JSON_Data$Chromaprints$length
length
key_scale
length = JSON_Data$metadata$audio_properties$length
length
library("stringr")
################ Task 1 Step 1
music_dirs <- list.dirs("MUSIC", recursive = TRUE)
################ Task 1 Step 2
code_to_process <- c()
slash_counts <- str_count(music_dirs, "/")
album_dirs <- music_dirs [which(slash_counts == 2)]
for (i in 1:length(album_dirs)) {
################ Task 1 Step 3 Part 1
# For each album one at a time
curr.album <- album_dirs[i]
files_in_album <- list.files(curr.album)
################ Task 1 Step 3 Part 2
WAV_counts <- str_count(files_in_album, ".wav")
files_in_album <- files_in_album [which(WAV_counts == 1)]
for (j in 1:length(files_in_album)) {
################ Task 1 Step 3 Part 3 Part A
track = files_in_album[j]
Track_Title <- paste('"',curr.album, "/",track,'"', sep = "")
Track_Title
################ Task 1 Step 3 Part 3 Part B
track.file.name <- str_sub(track, 1, nchar(track) - 4)
split_name <- str_split(track.file.name, "-")[[1]]
track_name <- split_name[length(split_name)]
################ Task 1 Step 3 Part 3 Part C
split_artistname <- str_split(curr.album, "/")[[1]]
artist_name <- split_artistname[2]
split_albumname <- str_split(curr.album, "/")[[1]]
album_name <- split_albumname[length(split_albumname)]
Desired.Output.File <- paste(artist_name, "-",album_name,'-',track_name,'.',"json", sep = "")
Desired.Output.File
################ Task 1 Step 3 Part 3 Part C
Final.output <- paste('streaming_extractor_music.exe "', track, '" "', Desired.Output.File, '"', sep = "")
code_to_process <- c(code_to_process, Final.output)
}
}
################ Step 4
writeLines(code_to_process, "batfile.txt")
################ Task 2
################ Step 1
Json_file = "The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json"
split_Json_file = str_split(Json_file, "-", simplify = TRUE)
################ Step 2
JSON_Data = fromJSON(Json_file)
################ Step 3
average_loudness = JSON_Data$lowlevel$average_loudness
spectral_energy = JSON_Data$lowlevel$spectral_energy$mean
danceability = JSON_Data$rhythm$danceability
bpm = JSON_Data$rhythm$bpm
key_scale = JSON_Data$tonal$key_scale
length = JSON_Data$metadata$audio_properties$length
